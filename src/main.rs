fn main() {
    let mut vec = Vec::with_capacity(100);

    for _ in 0..99 {
        vec.push("yoyololo".to_string());
    }
}

const _NUM: usize = 1000000;
const _LEN: usize = _NUM - 1;
const _TARGET_STRING: &str = "asdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaks
djlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjas
daksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasd
jasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjla
sdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlas
djasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaks
djlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj]
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaks
djlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjas
daksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasd
jasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjla
sdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlas
djasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaks
djlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj]
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaks
djlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjas
daksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasd
jasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjla
sdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlas
djasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaks
djlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj]
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaks
djlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjas
daksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasd
jasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjla
sdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlas
djasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaks
djlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj]
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaks
djlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjas
daksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasd
jasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjla
sdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlas
djasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaks
djlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj]
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaks
djlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjas
daksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasd
jasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjla
sdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlas
djasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaks
djlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj]
asdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdjasdaksdjlasdj";

#[test]
fn test_arr_speed() {
    const STR :String= String::new();
    let mut arr: [String; _NUM] = [STR; _NUM];

    for i in 0.._LEN{
        arr[i] = _TARGET_STRING.to_string();
    }

    for i in 0.._LEN {
        arr[i] = String::new();
    }
}

#[test]
fn test_vec_speed_with_capacity() {
    let mut vec = Vec::with_capacity(_NUM);

    for _ in 0..=_LEN {
        vec.push(String::from(_TARGET_STRING));
    }

    for _ in 0..=_LEN {
        vec.remove(vec.len() - 1);
    }
}

#[test]
fn test_vec_speed_() {
    let mut vec = vec![];

    for _ in 0..=_LEN {
        vec.push(String::from(_TARGET_STRING));
    }

    for _ in 0..=_LEN {
        vec.remove(vec.len() - 1);
    }
}

#[test]
fn test_hash_map_speed() {
    use std::collections::HashMap;
    let mut hash_map = HashMap::new();

    for i in 0..=_LEN {
        hash_map.insert(i, String::from(_TARGET_STRING));
    }

    for i in 0..=_LEN {
        hash_map.remove(&i);
    }
}
